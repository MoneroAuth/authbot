##################################################################
# These instructions are for the old (deprecated) authbot design #
##################################################################
An updated for the new design will be provided soon.

An authbot virtualbox vm template can be downloaded via ipfs. The ipfs content identifier is:QmdYgwjJYEZHf35GTzpDy66j9WY91KUmhrEz9ZGc4h5VAt

The file should be renamed to authbot-v0.0.6.2.ova in order for it to be imported into VirtualBox.
The SHA 256 verification hash for the file is: 834d12bbc794a45fe0978291b914e6ede028578c1322991f42122e5e9ffeddf2

The virtual machine is configured with Ubuntu Server 22.04.2 LTS configured with 4096 MB RAM, 1 CPU.
The login credential: username: user, password: password (change the password once you login)

The virtual machine has port forwarding enabled so you should be able to ssh to it as follows:
ssh user@127.0.0.1 -p 2222

You will need to create a monero wallet in the /home/user/monero-v0.18.2.2/ directory
For simplicity name the wallet: authbot
Then place the wallet password in the pwd.txt file.

Start the wallet service by issuing the following commands:
sudo systemctl enable wallet.service
sudo systemctl daemon-reload
sudo systemctl start wallet.service

Next create an anon ID in your wallet:
curl http://127.0.0.1:18089/json_rpc -d '{"jsonrpc":"2.0","id":"0","method":"create_address","params":{"account_index":0,"label":"anon","count":1}}' -H 'Content-Type: application/json''

Then create an ID for your authbot:
curl http://localhost:18089/json_rpc -d '{"jsonrpc":"2.0","id":"1","method":"create_account","params":{"label":"authbot"}}' -H 'Content-Type: application/json''


Make sure you have an account on a matrix protocol (Synapse) homeserver (such as matrix.org). You can goto https://app.element.io to create a new account. You should create 2 accounts, one for you and one for your authbot.

Login to your authbot account in https://app.element.io
create a new private room for your authbot, (You can locate your room id by going to the room "Settings",
"Advanced" tab. "Room Information", "Internal Room ID"). You will want to save your security key for reference in subsequent sessions.

Next configure your authbot (Use the info for the matrix account you created for your authbot):
cd /home/user/matrix-eno-bot
nano config.yaml
uncomment and set the following variables with your values:

command_prefix (your authbot ID from the step above (Then create an ID for your authbot:). Place the ID inside double quotes.
user_id
user_password
homeserver_url
device_id (Uppercase,just create one. Example:AUTHBOT)
device_name (provide a name. Example: authbot)

Save the config.yaml file
Then:
Login to your authbot matrix account.
On the authbot computer:
cd /home/user/matrix-eno-bot
./main.py config.yaml

Your app.element.io session will ask you if you just logged in. Respond in the affirmative.
Next click the icon ("i" in a circle) in the upper right of the web page.
Click on the user_id, then look down in the area labeled "SECURITY". Click on the unverified authbot device, then confirm with emojis.
You will need to interactively verify in the web page as well as your authbot computer terminal.

Once you have confirmed the authbot device, perform the following commands on your authbot computer:
sudo systemctl enable matrix-eno-bot.service
sudo systemctl daemon-reload
sudo systemctl start matrix-eno-bot.service

Now your authbot will automatically run at startup.

Next, perform the following commands:
cd /home/user/authbot
matrix-commander --login password
(follow the prompts)

assuming all goes well:

matrix-commander --verify 

Using the web https://app.element.io and your authbot computer terminal, verify the matrix-commander device (like you did above for the authbot)

Finally, edit the authbot.json file in the /home/user/authbot directory.
change the "authbot_owner" value to your (not your authbot) matrix user_id

Then reboot the virtual machine and the authbot should be operational
